import java.util.Stack;

class Solution {
    public String decodeString(String s) {
        Stack<Integer> numStack = new Stack<>();
        Stack<StringBuilder> strStack = new Stack<>();
        StringBuilder currentStr = new StringBuilder();
        int k = 0;

        for (char ch : s.toCharArray()) {
            if (Character.isDigit(ch)) {
                k = k * 10 + (ch - '0'); // Build the number k (handle multi-digit numbers)
            } else if (ch == '[') {
                numStack.push(k); // Push the number onto the stack
                strStack.push(currentStr); // Push the current string onto the stack
                currentStr = new StringBuilder(); // Reset current string
                k = 0; // Reset k
            } else if (ch == ']') {
                int repeatTimes = numStack.pop(); // Get the number of times to repeat
                StringBuilder decodedString = strStack.pop(); // Get the string to append to
                for (int i = 0; i < repeatTimes; i++) {
                    decodedString.append(currentStr);
                }
                currentStr = decodedString; // Set the current string to the decoded string
            } else {
                currentStr.append(ch); // Append the character to the current string
            }
        }

        return currentStr.toString();
    }
}
